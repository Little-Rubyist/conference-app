class Speaker < ::ApplicationRecord
  class HABTM_Talks < ::ActiveRecord::Base
    extend _ActiveRecord_Relation_ClassMethods[Speaker::HABTM_Talks, ActiveRecord_Relation, top]

    module GeneratedAttributeMethods
      def speaker_id: () -> Integer

      def speaker_id=: (Integer) -> Integer

      def speaker_id?: () -> bool

      def speaker_id_changed?: () -> bool

      def speaker_id_change: () -> [ Integer?, Integer? ]

      def speaker_id_will_change!: () -> void

      def speaker_id_was: () -> Integer?

      def speaker_id_previously_changed?: () -> bool

      def speaker_id_previous_change: () -> Array[Integer?]?

      def speaker_id_previously_was: () -> Integer?

      def speaker_id_before_last_save: () -> Integer?

      def speaker_id_change_to_be_saved: () -> Array[Integer?]?

      def speaker_id_in_database: () -> Integer?

      def saved_change_to_speaker_id: () -> Array[Integer?]?

      def saved_change_to_speaker_id?: () -> bool

      def will_save_change_to_speaker_id?: () -> bool

      def restore_speaker_id!: () -> void

      def clear_speaker_id_change: () -> void

      def talk_id: () -> Integer

      def talk_id=: (Integer) -> Integer

      def talk_id?: () -> bool

      def talk_id_changed?: () -> bool

      def talk_id_change: () -> [ Integer?, Integer? ]

      def talk_id_will_change!: () -> void

      def talk_id_was: () -> Integer?

      def talk_id_previously_changed?: () -> bool

      def talk_id_previous_change: () -> Array[Integer?]?

      def talk_id_previously_was: () -> Integer?

      def talk_id_before_last_save: () -> Integer?

      def talk_id_change_to_be_saved: () -> Array[Integer?]?

      def talk_id_in_database: () -> Integer?

      def saved_change_to_talk_id: () -> Array[Integer?]?

      def saved_change_to_talk_id?: () -> bool

      def will_save_change_to_talk_id?: () -> bool

      def restore_talk_id!: () -> void

      def clear_talk_id_change: () -> void
    end
    include GeneratedAttributeMethods

    def left_side: () -> Speaker?
    def left_side=: (Speaker?) -> Speaker?
    def reload_left_side: () -> Speaker?
    def build_left_side: (untyped) -> Speaker
    def create_left_side: (untyped) -> Speaker
    def create_left_side!: (untyped) -> Speaker
    def talk: () -> Talk?
    def talk=: (Talk?) -> Talk?
    def reload_talk: () -> Talk?
    def build_talk: (untyped) -> Talk
    def create_talk: (untyped) -> Talk
    def create_talk!: (untyped) -> Talk
    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Speaker::HABTM_Talks, top]
      include Enumerable[Speaker::HABTM_Talks]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Speaker::HABTM_Talks, top]
    end
  end
end
